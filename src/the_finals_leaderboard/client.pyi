from __future__ import annotations

from the_finals_leaderboard.api import *
from the_finals_leaderboard.models import *
from typing import Literal, overload, Mapping

# The pit of overloads


class Client():
    def __init__(self, use_cached: bool = False, url: str = "https://api.the-finals-leaderboard.com", timeout: float = 10.0): ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.CB1, "cb1"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[CB1RankedUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.CB1, "cb1"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[CB1RankedUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.CB2, "cb2"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[CB2RankedUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.CB2, "cb2"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[CB2RankedUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.OB, "ob"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[OBRankedUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.OB, "ob"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[OBRankedUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S1, "s1"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season1RankedUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S1, "s1"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season1RankedUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S2, "s2"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season2RankedUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S2, "s2"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season2RankedUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S3, "s3"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season3RankedUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S3, "s3"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season3RankedUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S3ORIGINAL, "s3original"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season3RankedUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S3ORIGINAL, "s3original"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season3RankedUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S3WORLDTOUR, "s3worldtour"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season3WorldTourUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S3WORLDTOUR, "s3worldtour"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season3WorldTourUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S4, "s4"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season4RankedUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S4, "s4"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season4RankedUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S4WORLDTOUR, "s4worldtour"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season4WorldTourUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S4WORLDTOUR, "s4worldtour"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season4WorldTourUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S4SPONSOR, "s4sponsor"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season4SponsorUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S4SPONSOR, "s4sponsor"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season4SponsorUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S5, "s5"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season5RankedUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S5, "s5"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season5RankedUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S5SPONSOR, "s5sponsor"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season5SponsorUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S5SPONSOR, "s5sponsor"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season5SponsorUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S5WORLDTOUR, "s5worldtour"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season5WorldTourUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S5WORLDTOUR, "s5worldtour"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season5WorldTourUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S5TERMINALATTACK, "s5terminalattack"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season5TerminalAttackUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S5TERMINALATTACK, "s5terminalattack"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season5TerminalAttackUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S5POWERSHIFT, "s5powershift"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season5PowerShiftUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S5POWERSHIFT, "s5powershift"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season5PowerShiftUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S5QUICKCASH, "s5quickcash"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season5QuickCashUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S5QUICKCASH, "s5quickcash"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season5QuickCashUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S5BANKIT, "s5bankit"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season5BankItUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S5BANKIT, "s5bankit"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season5BankItUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S6, "s6"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6RankedUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S6, "s6"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6RankedUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S6SPONSOR, "s6sponsor"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6SponsorUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S6SPONSOR, "s6sponsor"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6SponsorUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S6WORLDTOUR, "s6worldtour"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6WorldTourUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S6WORLDTOUR, "s6worldtour"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6WorldTourUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S6TERMINALATTACK, "s6terminalattack"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6TerminalAttackUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S6TERMINALATTACK, "s6terminalattack"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6TerminalAttackUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S6POWERSHIFT, "s6powershift"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6PowerShiftUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S6POWERSHIFT, "s6powershift"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6PowerShiftUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S6QUICKCASH, "s6quickcash"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6QuickCashUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S6QUICKCASH, "s6quickcash"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6QuickCashUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S6TEAMDEATHMATCH, "s6teamdeathmatch"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6TeamDeathmatchUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S6TEAMDEATHMATCH, "s6teamdeathmatch"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6TeamDeathmatchUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S6HEAVYHITTERS, "s6heavyhitters"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6HeavyHittersUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S6HEAVYHITTERS, "s6heavyhitters"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season6HeavyHittersUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S7, "s7"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7RankedUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S7, "s7"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7RankedUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S7SPONSOR, "s7sponsor"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7SponsorUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S7SPONSOR, "s7sponsor"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7SponsorUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S7WORLDTOUR, "s7worldtour"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7WorldTourUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S7WORLDTOUR, "s7worldtour"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7WorldTourUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S7TERMINALATTACK, "s7terminalattack"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7TerminalAttackUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S7TERMINALATTACK, "s7terminalattack"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7TerminalAttackUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S7POWERSHIFT, "s7powershift"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7PowerShiftUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S7POWERSHIFT, "s7powershift"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7PowerShiftUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S7QUICKCASH, "s7quickcash"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7QuickCashUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S7QUICKCASH, "s7quickcash"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7QuickCashUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S7TEAMDEATHMATCH, "s7teamdeathmatch"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7TeamDeathmatchUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S7TEAMDEATHMATCH, "s7teamdeathmatch"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7TeamDeathmatchUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S7BLASTOFF, "s7blastoff"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7BlastOffUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S7BLASTOFF, "s7blastoff"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7BlastOffUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S7CASHBALL, "s7cashball"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7CashBallUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S7CASHBALL, "s7cashball"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season7CashBallUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S8, "s8"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season8RankedUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S8, "s8"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season8RankedUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S8SPONSOR, "s8sponsor"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season8SponsorUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S8SPONSOR, "s8sponsor"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season8SponsorUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S8WORLDTOUR, "s8worldtour"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season8WorldTourUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S8WORLDTOUR, "s8worldtour"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season8WorldTourUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S8HEAD2HEAD, "s8head2head"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season8Head2HeadUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S8HEAD2HEAD, "s8head2head"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season8Head2HeadUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S8POWERSHIFT, "s8powershift"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season8PowerShiftUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S8POWERSHIFT, "s8powershift"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season8PowerShiftUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S8QUICKCASH, "s8quickcash"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season8QuickCashUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S8QUICKCASH, "s8quickcash"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season8QuickCashUser]: ...

    @overload
    def get_leaderboard_sync(self, leaderboard: Literal[Leaderboard.S8TEAMDEATHMATCH, "s8teamdeathmatch"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season8TeamDeathmatchUser]: ...
    @overload
    async def get_leaderboard_async(self, leaderboard: Literal[Leaderboard.S8TEAMDEATHMATCH, "s8teamdeathmatch"], name: str | None = None, club_tag: str | None = None, exact_club_tag: bool | None = None, platform: Platform | Literal["crossplay", "steam", "xbox", "psn"] = Platform.CROSSPLAY, filters: Mapping[str, Any] | None = None) -> LeaderboardResult[Season8TeamDeathmatchUser]: ...
